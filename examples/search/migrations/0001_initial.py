# Generated by Django 2.0.5 on 2018-05-20 19:06

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('text', models.TextField()),
                ('title_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('text_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
        ),
        migrations.AddIndex(
            model_name='blog',
            index=django.contrib.postgres.indexes.GinIndex(fields=['text_vector', 'title_vector'], name='search_blog_text_ve_fb62bc_gin'),
        ),
        migrations.RunSQL(
            '''
            CREATE TRIGGER title_vector_update BEFORE INSERT OR UPDATE
            ON search_blog FOR EACH ROW EXECUTE PROCEDURE
            tsvector_update_trigger('title_vector', 'pg_catalog.english', 'title');
            ''',
        ),
        migrations.RunSQL(
            '''
            CREATE TRIGGER text_vector_update BEFORE INSERT OR UPDATE
            ON search_blog FOR EACH ROW EXECUTE PROCEDURE
            tsvector_update_trigger('text_vector', 'pg_catalog.english', 'title');
            ''',
        ),
    ]
